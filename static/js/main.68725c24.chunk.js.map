{"version":3,"sources":["types.js","constants.js","Landing.jsx","urlUtils.js","NavBar.jsx","log.js","listen.js","AddNodeModal.jsx","EditNodeModal.jsx","ListIoksModal.jsx","IokText.jsx","storage/cache.js","SignedIn.jsx","storage/ipfs.js","storage/blockstack.js","App.jsx","index.jsx","../../ipfs-cytoscape/index.js"],"names":["STORAGE_TYPES","NTYPE","RTYPE","appConfig","AppConfig","DEFL_STORAGE","DEFL_STORAGE_OPTIONS","hash","IOKS","user","app","DEFL_GRAPH_ELEMENTS","nodes","data","name","node_type","id","resource_type","text","link","edges","source","target","DEFL_GRAPH_STYLE","selector","style","label","width","height","shape","opacity","Landing","userSession","UserSession","e","preventDefault","this","redirectToSignIn","guestModeHandler","props","className","type","onClick","signIn","bind","Component","defaultProps","alert","redirectStorage","storage","options","url","URL","window","location","origin","pathname","par","searchParams","Object","keys","forEach","key","set","href","redirectGuest","guest","redirectDefl","NavBar","changeLoadUser","signOut","Link","onHomeClick","to","greetingBuilder","selectStorageBuilder","signOutBuilder","username","loaduser","signOutHandler","COLOURS","trace","info","warn","error","level","message","namespace","createDebug","debug","color","generateMessage","TAG","eh","drawOn","layout","lastRoot","hasCycle","getNodesEdgesJson","cy","j","json","elements","i","length","k","getExportableJson","obj","recenterCy","fit","regroupCy","cola","stop","animate","padding","animationDuration","nodeDimensionsIncludeLabels","run","Promise","toggleMeta","resources","replacementStyle","removeHighlighted","el","removeClass","unselect","a","setHighlighted","addClass","setAltHighlighted","notRootFilter","drawDependency","node","clearHighlighted","graph","calcDepNaive","root","depe","collection","dep","add","parents","incomers","numNewParents","p","contains","filter","AddNodeModal","state","isOpen","nodeType","topicName","resourceType","toggleModal","handleClose","handleSubmit","setState","resourceData","str","RegExp","test","addNode","fillInNode","Form","Group","Label","Control","placeholder","onChange","ev","value","Check","topicOrResource","Feedback","Text","val","prevState","Button","Modal","show","onHide","Header","closeButton","Title","Body","pickedNode","Footer","backgroundColor","variant","EditNodeModal","setStateFromNode","handleOpen","setResourceType","setNode","updateEdges","removeNode","JSON","stringify","newNode","shift","position","trigger","ToggleButtonGroup","ToggleButton","descOrLink","onShow","ListIoksModal","paramName","paramValue","paramV","pattern","search","replace","urlNew","indexOf","map","iok","makeIokComponent","IokText","onSaveClick","onDeleteClick","loadGraphHandler","toggleSaveModal","toggleDeleteModal","onMetaClick","onRegroupClick","onAddClick","addNodeToCy","downloadGraph","onFileUploadHandler","removeNodeFromCy","updateEdgesFromCy","drawEnabled","showDeleteModal","showSaveModal","rand","String","Math","ceil","random","concat","event","reader","FileReader","onload","Log","result","parse","err","readAsText","files","exportObj","dataStr","encodeURIComponent","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","sha256","create","update","dataWithHash","hex","substring","group","console","oldNode","isNode","neighbor","outgoers","connectedEdges","currNode","graphLoaded","guestMode","setCurrNode","subtitle","neighbors","depList","descList","linkList","push","onDrawClick","disableDrawMode","disable","enable","enableDrawMode","KEY","saveCache","graphStr","localStorage","setItem","optionsStr","Cytoscape","use","dagre","edgehandles","SignedIn","unableToLoadGraph","selectedNode","timerID","loadGraph","saveGraph","deleteGraph","loadDefaultGraph","loadEmptyGraph","loadGraphFromFile","onSuccessLoadGraph","onErrorLoadGraph","periodicallySaveCache","container","getElementById","callback","on","evt","registerNodeTap","preview","noEdgeEventsInDraw","snap","handleNodes","sourceNode","targetNode","addedEles","registerEdgeHandles","clearInterval","newTimerID","setInterval","jsonGraph","newUser","onSuccess","onError","cached","storedGraph","getItem","storedOptions","loadCache","getFullGraph","then","catch","loadUsername","decrypt","getFile","content","loadBlockstackGraph","onHashChange","putGraph","saveIPFSGraph","putFile","encrypt","finally","saveBlockstackGraph","deleteFile","removeItem","signUserOut","loadName","sizes","gutterStyle","overrideGutterStyle","gutterAlign","direction","cursor","App","split","URLSearchParams","has","get","parseParams","session","isUserSignedIn","isSignInPending","handlePendingSignIn","userData","Error","ReactDOM","render","BrowserRouter","ipfs","require","host","port","protocol","apiPath","format","hashAlg","pin","putNodeProms","putAndProm","lst","prom","dag","put","all","ipfsGraph","cid","toBaseEncodedString","getGraph","path","cgraph","nodeCIDs","getNodeProms","getAndProm","vnodes","module","exports"],"mappings":"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","file":"static/js/main.68725c24.chunk.js","sourcesContent":["// eslint-disable-line\n\n/** Types of storage backends */\nexport const STORAGE_TYPES = {\n  BLOCKSTACK: 'blockstack',\n  IPFS: 'ipfs',\n};\n\n/** Types of nodes on the graph */\nexport const NTYPE = {\n  TOPIC: 1,\n  RESO: 2,\n};\n\n/** Types of resources on the graph */\nexport const RTYPE = {\n  DESC: 1,\n  LINK: 4,\n};\n","// eslint-disable-line\nimport { AppConfig } from 'blockstack';\nimport { STORAGE_TYPES } from './types';\n\nexport const appConfig = new AppConfig(['store_write', 'publish_data']);\n\nexport const GRAPH_FILENAME = 'graph.json';\n\nexport const DEFL_STORAGE = STORAGE_TYPES.IPFS;\n\nexport const DEFL_STORAGE_OPTIONS = {\n  hash: 'bafyreicuan6hdr7jaz5e7pdevsjqjtviigil5achefs6lcwdaah5zc57le',\n};\n\nexport const IOKS = [\n  {\n    user: 'rustielin.id.blockstack',\n    app: 'https://index-of-knowledge.firebaseapp.com/?loaduser=rustielin.id.blockstack',\n  },\n  {\n    user: 'rustielintest.id.blockstack',\n    app: 'https://index-of-knowledge-beta.firebaseapp.com/?loaduser=rustielintest.id.blockstack',\n  },\n];\n\n// TODO: change all the id's since cytoscape will crash if collision\n// TODO: change all id's to hashes\n// TODO: add names and id to everything\nexport const DEFL_GRAPH_ELEMENTS = {\n  nodes: [\n    {\n      data: {\n        name: 'math',\n        node_type: 1,\n        id: '0ed8f58bf8b3ae5ba6b882961eff9068c84268522fdf1b9a7fdc90cae0e9a703',\n      },\n    },\n    {\n      data: {\n        name: 'computer science',\n        node_type: 1,\n        id: '48cd5a52518c7054ade553b6e0eb991d315ecfe96164b44c13dc47269c954982',\n      },\n    },\n    {\n      data: {\n        name: 'economics',\n        node_type: 1,\n        id: 'a4be61c650fefcc75b406cbf120212a6ffe71c3a983f64e603e1b823e575abbb',\n      },\n    },\n    {\n      data: {\n        name: 'bitcoin',\n        node_type: 1,\n        id: '04eaf9a2a65d37f254fab35f969da7b133cea2087e1be846ea2dc8ccbb0e2470',\n      },\n    },\n    {\n      data: {\n        resource_type: 1,\n        data: {\n          text: 'Computer science is the study of processes that interact with data and that can be represented as data in the form of programs.',\n          link: '',\n        },\n        node_type: 2,\n        id: '8d3e61ce168c16ae5c10fc0eb2085e7063844736be62d37c1318b437e60a06b2',\n        name: 'res-8d3e61ce16',\n      },\n    },\n    {\n      data: {\n        resource_type: 1,\n        data: {\n          text: 'Economics is the social science that studies the production, distribution, and consumption of goods and services.',\n          link: '',\n        },\n        node_type: 2,\n        id: '71686ead6a4dc2481870877da6a888fab7c488819572c391b71acabd047930fe',\n        name: 'res-71686ead6a',\n      },\n    },\n    {\n      data: {\n        resource_type: 1,\n        data: {\n          text: 'Mathematics is the study of abstract objects and structures that are often, but not always, abstracted from the physical world. It includes the study of such abstractions as quantity, structure, space and shapes, and change.',\n          link: '',\n        },\n        node_type: 2,\n        id: '4fba4eba5e774c7a67c951001f27784d63116b4fc182b9977254bd1223e185a1',\n        name: 'res-4fba4eba5e',\n      },\n    },\n    {\n      data: {\n        resource_type: 1,\n        data: {\n          text: 'Bitcoin is an innovative payment network and a new kind of money.',\n          link: '',\n        },\n        node_type: 2,\n        id: 'e6f043e27913e1ceb469bfbcc6eca983a374918618c4912e65f4756f6e177855',\n        name: 'res-e6f043e279',\n      },\n    },\n    {\n      data: {\n        resource_type: 4,\n        data: {\n          text: 'Bitcoin: A Peer-to-Peer Electronic Cash System',\n          link: 'https://bitcoin.org/bitcoin.pdf',\n        },\n        node_type: 2,\n        id: '5e71f1ce88b810081fc39b4aae938593e8ddf086d93b544ae83c51bcb2905319',\n        name: 'res-5e71f1ce88',\n      },\n    },\n  ],\n  edges: [\n    {\n      data: {\n        source: '48cd5a52518c7054ade553b6e0eb991d315ecfe96164b44c13dc47269c954982',\n        target: '04eaf9a2a65d37f254fab35f969da7b133cea2087e1be846ea2dc8ccbb0e2470',\n        id: '0f366f92-58ca-4f29-b942-da41ca8863c7',\n      },\n    },\n    {\n      data: {\n        source: '0ed8f58bf8b3ae5ba6b882961eff9068c84268522fdf1b9a7fdc90cae0e9a703',\n        target: '04eaf9a2a65d37f254fab35f969da7b133cea2087e1be846ea2dc8ccbb0e2470',\n        id: '090d2ffb-9a72-4660-a7a7-247119ba47a0',\n      },\n    },\n    {\n      data: {\n        source: 'a4be61c650fefcc75b406cbf120212a6ffe71c3a983f64e603e1b823e575abbb',\n        target: '04eaf9a2a65d37f254fab35f969da7b133cea2087e1be846ea2dc8ccbb0e2470',\n        id: '27ef1ee0-344b-4961-9afd-3639e32c6736',\n      },\n    },\n    {\n      data: {\n        source: '8d3e61ce168c16ae5c10fc0eb2085e7063844736be62d37c1318b437e60a06b2',\n        target: '48cd5a52518c7054ade553b6e0eb991d315ecfe96164b44c13dc47269c954982',\n        id: '3a33c7c3-714a-4da4-a1e4-dbcc1cd1c86b',\n      },\n    },\n    {\n      data: {\n        source: '71686ead6a4dc2481870877da6a888fab7c488819572c391b71acabd047930fe',\n        target: 'a4be61c650fefcc75b406cbf120212a6ffe71c3a983f64e603e1b823e575abbb',\n        id: '92369729-24e4-4f83-9aa0-a72667cf9191',\n      },\n    },\n    {\n      data: {\n        source: '4fba4eba5e774c7a67c951001f27784d63116b4fc182b9977254bd1223e185a1',\n        target: '0ed8f58bf8b3ae5ba6b882961eff9068c84268522fdf1b9a7fdc90cae0e9a703',\n        id: '1f3f5e7e-bf90-43ba-ace5-0fbfe462872b',\n      },\n    },\n    {\n      data: {\n        source: 'e6f043e27913e1ceb469bfbcc6eca983a374918618c4912e65f4756f6e177855',\n        target: '04eaf9a2a65d37f254fab35f969da7b133cea2087e1be846ea2dc8ccbb0e2470',\n        id: '649c601a-dd57-42a9-ba1f-5053c37152e0',\n      },\n    },\n    {\n      data: {\n        source: '5e71f1ce88b810081fc39b4aae938593e8ddf086d93b544ae83c51bcb2905319',\n        target: '04eaf9a2a65d37f254fab35f969da7b133cea2087e1be846ea2dc8ccbb0e2470',\n        id: '53e2e0a4-a766-4b9e-a88a-a87c7d293772',\n      },\n    },\n  ],\n};\n\n\nexport const DEFL_GRAPH_STYLE = [\n  {\n    selector: 'node[name]',\n    style: {\n      'background-color': '#f8be35',\n      label: 'data(name)',\n    },\n  },\n  {\n    selector: 'edge',\n    style: {\n      width: 4,\n      'target-arrow-shape': 'triangle',\n      'line-color': '#FFE6A9',\n      'target-arrow-color': '#FFE6A9',\n      'curve-style': 'bezier',\n    },\n  },\n  {\n    selector: '.selected',\n    style: {\n      'background-color': '#E8747C',\n    },\n  },\n  {\n    selector: '.highlighted',\n    style: {\n      'background-color': '#75b5aa',\n      'line-color': '#75b5aa',\n      'target-arrow-color': '#75b5aa',\n      'transition-property': 'background-color, line-color, target-arrow-color',\n      'transition-duration': '0.5s',\n    },\n  },\n  {\n    selector: '.altHighlighted',\n    style: {\n      'background-color': '#E8747C',\n      'line-color': '#E8747C',\n      'target-arrow-color': '#E8747C',\n      'transition-property': 'background-color, line-color, target-arrow-color',\n      'transition-duration': '0.5s',\n    },\n  },\n\n  // BEGIN EH STYLING\n\n  {\n    selector: '.eh-handle',\n    style: {\n      'background-color': 'red',\n      width: 12,\n      height: 12,\n      shape: 'ellipse',\n      'overlay-opacity': 0,\n      'border-width': 12, // makes the handle easier to hit\n      'border-opacity': 0,\n    },\n  },\n  {\n    selector: '.eh-hover',\n    style: {\n      'background-color': 'red',\n    },\n  },\n  {\n    selector: '.eh-source',\n    style: {\n      'border-width': 2,\n      'border-color': 'red',\n    },\n  },\n  {\n    selector: '.eh-target',\n    style: {\n      'border-width': 2,\n      'border-color': 'red',\n    },\n  },\n  {\n    selector: '.eh-preview, .eh-ghost-edge',\n    style: {\n      'background-color': 'red',\n      'line-color': 'red',\n      'target-arrow-color': 'red',\n      'source-arrow-color': 'red',\n    },\n  },\n  {\n    selector: '.eh-ghost-edge.eh-preview-active',\n    style: {\n      opacity: 0,\n    },\n  },\n];\n","// eslint-disable-line\n/* eslint-disable no-alert */\nimport React, { Component } from 'react';\nimport { UserSession } from 'blockstack';\nimport { PropTypes } from 'prop-types';\nimport { appConfig } from './constants';\nimport './styles/Landing.css';\n\nclass Landing extends Component {\n  constructor() {\n    super();\n    this.userSession = new UserSession({ appConfig });\n  }\n\n  signIn(e) {\n    e.preventDefault();\n    this.userSession.redirectToSignIn();\n  }\n\n  render() {\n    const { guestModeHandler } = this.props;\n    return (\n      <div className=\"Landing\">\n        <div className=\"form-signin\">\n          <h1 className=\"h1 mb-3 font-weight-normal\">Index of Knowledge</h1>\n          <button\n            type=\"button\"\n            className=\"btn btn-lg btn-primary btn-block\"\n            onClick={this.signIn.bind(this)}\n          >\n            Sign in with Blockstack\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-lg btn-primary btn-block\"\n            onClick={guestModeHandler}\n          >\n            Continue as guest\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.defaultProps = {\n  guestModeHandler: () => alert('ERROR: guestModeHandler() invalid'),\n};\n\nLanding.propTypes = {\n  guestModeHandler: PropTypes.func,\n};\n\nexport default Landing;\n","import { STORAGE_TYPES } from './types';\nimport { DEFL_STORAGE, DEFL_STORAGE_OPTIONS } from './constants';\n\n\nexport const redirectStorage = (storage, options = {}) => {\n  const url = new URL(window.location.origin);\n  url.pathname = storage;\n  const par = url.searchParams;\n  Object.keys(options).forEach((key) => {\n    par.set(key, options[key]);\n  });\n  window.location.href = url;\n};\n\nexport const redirectGuest = () => {\n  redirectStorage(STORAGE_TYPES.BLOCKSTACK, { guest: true });\n};\n\nexport const redirectDefl = () => {\n  redirectStorage(DEFL_STORAGE, DEFL_STORAGE_OPTIONS);\n};\n\nexport const parseParams = () => {\n  const url = new URL(window.location.href);\n  // hacky, but gets the pathname without params\n  const pathname = url.pathname.split('/')[1].split('&')[0];\n  const par = new URLSearchParams(window.location.search);\n\n  /**\n       * Params parsing logic, mainly for configuring storage\n       * and related options. Anything invalid goes to default\n       * TODO: hide this from url params (#102)\n       * */\n  let storage = DEFL_STORAGE;\n  const options = JSON.parse(JSON.stringify(DEFL_STORAGE_OPTIONS));\n  switch (pathname) {\n    case STORAGE_TYPES.BLOCKSTACK:\n      storage = STORAGE_TYPES.BLOCKSTACK;\n      if (par.has('guest') && par.get('guest') === 'true') {\n        options.guest = true;\n        options.username = 'guest';\n      } else {\n        options.guest = false;\n      }\n      if (par.has('loaduser')) {\n        options.loaduser = par.get('loaduser');\n      }\n      break;\n    case STORAGE_TYPES.IPFS:\n      storage = STORAGE_TYPES.IPFS;\n      if (par.has('hash')) {\n        options.hash = par.get('hash');\n      } else {\n        redirectDefl();\n      }\n      break;\n    default:\n      redirectDefl();\n  }\n\n  return { storage, options };\n};\n","// eslint-disable-line\n/* eslint-disable guard-for-in */\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { STORAGE_TYPES } from './types';\nimport { DEFL_STORAGE, DEFL_STORAGE_OPTIONS } from './constants';\nimport { redirectStorage, redirectDefl } from './urlUtils';\nimport './styles/NavBar.css';\n\nclass NavBar extends Component {\n  static onHomeClick(storage, options, changeLoadUser) {\n    switch (storage) {\n      case STORAGE_TYPES.BLOCKSTACK:\n        changeLoadUser(options.username);\n        break;\n      case STORAGE_TYPES.IPFS:\n        redirectDefl();\n        break;\n      default:\n        break;\n    }\n  }\n\n  static greetingBuilder(storage, options) {\n    switch (storage) {\n      case STORAGE_TYPES.BLOCKSTACK:\n        return `Viewing ${options.loaduser}'s IoK, logged in as ${options.username}`;\n      case STORAGE_TYPES.IPFS:\n        return options.hash;\n      default:\n        return 'Hello';\n    }\n  }\n\n  static signOutBuilder(storage, options, signOutHandler) {\n    switch (storage) {\n      case STORAGE_TYPES.BLOCKSTACK:\n        return (\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={signOutHandler}\n          >\n            Sign\n            {options.username === 'guest' ? ' in' : ' out'}\n\n          </button>\n        );\n      case STORAGE_TYPES.IPFS:\n        return '';\n      default:\n        return 'Hello';\n    }\n  }\n\n  static selectStorageBuilder(storage) {\n    switch (storage) {\n      case STORAGE_TYPES.BLOCKSTACK:\n        return (\n          <button\n            type=\"button\"\n            className=\"btn btn-info btn-lg btn-util\"\n            onClick={() => redirectStorage(STORAGE_TYPES.IPFS)}\n          >\n            Try IPFS!\n          </button>\n        );\n      case STORAGE_TYPES.IPFS:\n        return (\n          <button\n            type=\"button\"\n            className=\"btn btn-info btn-lg btn-util\"\n            onClick={() => redirectStorage(STORAGE_TYPES.BLOCKSTACK)}\n          >\n            Try Blockstack!\n          </button>\n        );\n      default:\n        return 'Hello';\n    }\n  }\n\n\n  render() {\n    const {\n      storage, options, changeLoadUser, signOut,\n    } = this.props;\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-blue fixed-top\">\n        <Link className=\"navbar-brand\" onClick={() => NavBar.onHomeClick(storage, options, changeLoadUser)} to=\"/\">Index of Knowledge</Link>\n\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            {NavBar.greetingBuilder(storage, options)}\n          </li>\n        </ul>\n        <p className=\"navbar-nav mr-auto\">\n          {}\n        </p>\n        {NavBar.selectStorageBuilder(storage)}\n        {NavBar.signOutBuilder(storage, options, signOut.bind(this))}\n      </nav>\n    );\n  }\n}\n\nNavBar.defaultProps = {\n  storage: DEFL_STORAGE,\n  options: DEFL_STORAGE_OPTIONS,\n  // XXX: replace these alerts\n  // eslint-disable-next-line no-alert\n  changeLoadUser: () => alert('ERROR: changeLoadUser() invalid'),\n  // eslint-disable-next-line no-alert\n  signOut: () => alert('ERROR: signOut() invalid'),\n};\n\nNavBar.propTypes = {\n  storage: PropTypes.string,\n  // eslint-disable-next-line react/forbid-prop-types\n  options: PropTypes.object,\n  changeLoadUser: PropTypes.func,\n  signOut: PropTypes.func,\n};\n\nexport default NavBar;\n","/* eslint-disable */\nimport debug from 'debug';\n\nconst BASE = 'iok';\nconst COLOURS = {\n  trace: 'lightblue',\n  info: 'green',\n  warn: 'pink',\n  error: 'red'\n}; // choose better colours :)\n\nclass Log {\n  generateMessage(level, message, source) {\n    // Set the prefix which will cause debug to enable the message\n    const namespace = `${BASE}:${level}`;\n    const createDebug = debug(namespace);\n    \n    // Set the colour of the message based on the level\n    createDebug.color = COLOURS[level];\n    \n    if(source) { createDebug(source, message); }\n    else { createDebug(message); }\n  }\n  \n  trace(message, source) {\n    return this.generateMessage('trace', message, source);\n  }\n  \n  info(message, source) {\n    return this.generateMessage('info', message, source);\n  }\n  \n  warn(message, source) {\n    return this.generateMessage('warn', message, source);\n  }\n  \n  error(message, source) {\n    return this.generateMessage('error', message, source);\n  }\n}\n\nexport default new Log();","// eslint-disable-line\n/* eslint-disable no-console */\n/* eslint-disable no-alert */\n\nimport Log from './log';\n\n// Mostly imported from old IoKv3...\n// Ugly code inbound\n\nconst TAG = 'listen';\n\n// some ugly state ugh...\nconst cy = null;\nlet eh = null;\nlet drawOn = false;\nlet layout = null;\nlet lastRoot = null; // dummy\nlet hasCycle = false;\n\n/**\n *\n * @param {*} cy\n * @param {*} data including node_type, id, and name\n */\n// eslint-disable-next-line no-shadow\nexport const addNode = (cy, data) => {\n  try {\n    return cy.add({ group: 'nodes', data });\n  } catch (err) {\n    console.error(err);\n    alert('Failed to add node. Check for ID collisions');\n    return null;\n  }\n};\n\n/**\n * Extract the json for the cy instance but only with nodes and edges\n * Dealing with the entire cy instance is too heavy and also comes with unintended\n * side effects (e.g. node highlighting and styles)\n * @param {*} cy\n */\n// eslint-disable-next-line no-shadow\nexport const getNodesEdgesJson = (cy) => {\n  const j = cy.json();\n  const { nodes } = j.elements;\n  const { edges } = j.elements;\n  if (!nodes || !edges) {\n    return { nodes: [], edges: [] };\n    // return null; // XXX: this might be easier to propagate errors\n  }\n  for (let i = 0; i < nodes.length; i += 1) {\n    nodes[i] = { data: nodes[i].data };\n  }\n  for (let k = 0; k < edges.length; k += 1) {\n    edges[k] = { data: edges[k].data };\n  }\n  return { nodes, edges };\n};\n\n// eslint-disable-next-line no-shadow\nexport const getExportableJson = (cy) => {\n  const j = getNodesEdgesJson(cy);\n  const obj = { elements: j };\n  obj.style = cy.style;\n  return obj;\n};\n\n// eslint-disable-next-line no-shadow\nexport const registerEdgeHandles = (cy) => {\n  eh = cy.edgehandles({\n    preview: true,\n    noEdgeEventsInDraw: true,\n    snap: true,\n    handleNodes: 'node', // fake this for now\n  });\n  eh.disableDrawMode();\n  eh.disable();\n  // eslint-disable-line\n  // eslint-disable-next-line no-unused-vars\n  cy.on('ehcomplete', (event, sourceNode, targetNode, addedEles) => {\n    // let { position } = event;\n    Log.info(TAG, 'Added edge...');\n    Log.info(TAG, 'source:', sourceNode);\n    Log.info(TAG, 'target:', targetNode);\n    Log.info(TAG, 'eles:', cy.elements().length);\n    // Log.info(TAG, cy.nodes().length)\n  });\n};\n\nexport const toggleDrawMode = () => {\n  if (drawOn) {\n    eh.disableDrawMode();\n    eh.disable();\n    drawOn = false;\n  } else {\n    eh.enable();\n    eh.enableDrawMode();\n    drawOn = true;\n  }\n};\n\n// returns registered cy\nexport const getCy = () => cy;\n\n// TODO: offer alternatives..?\n// export const highlightNodeDepsOnClick = (evt) => {\n//     // Log.info('Node tapped')\n//     const node = evt.target;\n//     setHighlighted(node);\n//     setNodeData(node);\n//     drawDependency(cy, node);\n// }\n\n// eslint-disable-next-line no-shadow\nexport const recenterCy = (cy) => {\n  cy.fit();\n};\n\n// eslint-disable-next-line no-shadow\nexport const regroupCy = (cy, cola = true) => {\n  if (layout) {\n    layout.stop();\n  }\n  layout = cy.layout({\n    name: cola ? 'cola' : 'dagre',\n    animate: true,\n    padding: 50,\n    animationDuration: 300,\n    nodeDimensionsIncludeLabels: true,\n  });\n  layout.run();\n  return new Promise(() => { // give it some time\n    recenterCy(cy);\n  });\n};\n\n// eslint-disable-next-line no-shadow\nexport const toggleMeta = (cy) => {\n  // Log.info(\"TOGGLING META\")\n  const resources = cy.nodes('[node_type > 1]');\n  if (resources.length === 0) {\n    // Log.info(\"No resources found, can't toggle meta\")\n    return;\n  }\n  let replacementStyle = 'none';\n  if (resources[0].style('display') === 'none') {\n    replacementStyle = 'element';\n  }\n  for (let i = 0; i < resources.length; i += 1) {\n    resources[i].style('display', replacementStyle);\n  }\n};\n\nconst removeHighlighted = (el) => {\n  el.removeClass('highlighted');\n  el.removeClass('altHighlighted'); // impl once we have cycle detection\n};\n\nconst unselect = async (el) => {\n  el.removeClass('selected');\n  el.unselect();\n};\n\nconst setHighlighted = async (el) => {\n  el.addClass('highlighted');\n};\n\nconst setAltHighlighted = async (el) => {\n  el.addClass('altHighlighted');\n};\n\n// eslint-disable-next-line no-shadow\nconst clearHighlighted = (cy) => {\n  cy.nodes().forEach(removeHighlighted);\n  cy.edges().forEach(removeHighlighted);\n  cy.nodes().forEach(unselect);\n  cy.edges().forEach(unselect);\n};\n\nconst notRootFilter = (el) => el !== lastRoot;\n\n// recursively get dependencies\nconst calcDepNaive = (root, depe) => {\n  if (root === null) {\n    return cy.collection();\n  }\n\n  let dep = depe.add(root);\n  const parents = root.incomers();\n  let numNewParents = 0;\n  for (let i = 0; i < parents.length; i += 1) {\n    const p = parents[i];\n    if (!dep.contains(p)) {\n      dep = dep.add(calcDepNaive(p, dep));\n      numNewParents += dep.length;\n    }\n  }\n  if (numNewParents < parents.length - 1) {\n    hasCycle = true;\n    alert('Oh no! We have a dependency cycle...');\n  }\n\n  if (numNewParents === 0) {\n    return dep;\n  }\n  return dep;\n};\n\n// eslint-disable-next-line no-shadow\nconst drawDependency = (cy, node) => {\n  // Log.info(\"drawDependency\")\n  clearHighlighted(cy);\n  lastRoot = node;\n  hasCycle = false;\n  const graph = calcDepNaive(node, cy.collection());\n  // Log.info(\"deps...\")\n  // Log.info(graph)\n  if (hasCycle) {\n    graph.filter(notRootFilter).forEach(setAltHighlighted);\n  } else {\n    graph.filter(notRootFilter).forEach(setHighlighted);\n  }\n  node.addClass('selected');\n};\n\n// simple wrapper to allow users to swap out what happens on click\n// eslint-disable-next-line no-shadow\nexport const registerNodeTap = (cy, callback) => {\n  cy.on('tap', 'node', (evt) => {\n    const node = evt.target;\n    setHighlighted(node);\n    callback(node);\n    drawDependency(cy, node);\n  });\n};\n\nexport const validURL = (str) => {\n  const pattern = new RegExp('^(https?:\\\\/\\\\/)?' // protocol\n    + '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' // domain name\n    + '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' // OR ip (v4) address\n    + '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' // port and path\n    + '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' // query string\n    + '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\n  return !!pattern.test(str);\n};\n\n/**\n * Set node data to HMTL\n * TODO: get cy neighbors\n * TODO: CLEAN THIS UP!!!\n * @param {*} node\n */\n// const setNodeData = (node) => {\n\n//     // write some basic name and ID\n//     if (node.data('name')) {\n//         document.getElementById('nodetitle').innerText = node.data('name')\n//     }\n//     document.getElementById('nodeid').innerText = node.data('id')\n\n\n//     const ulNodeLinks = document.getElementById('nodelinks');\n//     const ulNodeDeps = document.getElementById('nodedeps')\n//     const ulNodeDescs = document.getElementById('nodedescs')\n//     const nodeSubtitle = document.getElementById('nodesubtitle')\n//     ulNodeLinks.innerHTML = ''; // dirty wiping\n//     ulNodeDeps.innerHTML = '';\n//     ulNodeDescs.innerHTML = '';\n//     nodeSubtitle.innerHTML = '';\n//     const li = null;\n//     const depText = null;\n//     const a = null;\n//     const data = null;\n//     const linkText = null;\n\n//     // get each dependency for traversal\n//     const neighbors = node.incomers((el) => el.isNode())\n\n//     // XXX: HACK!! If it's a resource, just make it it's own neighbor so we can display\n//     if (node.data('node_type') !== 1) {\n//         neighbors = [node]\n//         nodeSubtitle.innerHTML = 'NOTE: Resource node. Displaying own contents';\n//     }\n\n//     for (const i = 0; i < neighbors.length; i++) {\n//         const dataObj = neighbors[i].data()\n//         if (dataObj.node_type === 1) { // topic is dep\n//             li = document.createElement('li');\n//             depText = document.createTextNode(dataObj.name)\n//             li.appendChild(depText)\n//             ulNodeDeps.appendChild(li)\n//         } else if (dataObj.node_type === 2) { // resource\n//             data = neighbors[i].data().data\n//             if (dataObj.resource_type === 1) { // desc\n//                 li = document.createElement('li')\n//                 li.appendChild(document.createTextNode(data))\n//                 ulNodeDescs.appendChild(li)\n//             } else { // link type\n//                 li = document.createElement('li');\n//                 a = document.createElement('a');\n//                 linkText = document.createTextNode(data.text);\n//                 a.appendChild(linkText);\n//                 a.title = data.text;\n//                 a.href = data.link;\n//                 li.appendChild(a);\n//                 ulNodeLinks.appendChild(li);\n//             }\n//         }\n//     }\n// }\n","// eslint-disable-line\n/* eslint-disable no-alert */\n/* eslint-disable no-nested-ternary */ // XXX: !!!!!!!!PLEASE FIX THIS!!!!!!!\nimport React, { Component } from 'react';\nimport { Button, Modal, Form } from 'react-bootstrap';\nimport { PropTypes } from 'prop-types';\n\nimport { validURL } from './listen';\n\nimport './styles/AddNodeModal.css';\n\nclass AddNodeModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      nodeType: 0,\n      topicName: '',\n      resourceType: 0,\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    const { isOpen } = this.state;\n    this.setState({ isOpen: !isOpen });\n  }\n\n  handleClose() {\n    this.setState({ // make it default again\n      isOpen: false,\n      nodeType: 0,\n      topicName: '',\n      resourceType: 0,\n      resourceData: null,\n    });\n    this.toggleModal();\n  }\n\n  handleSubmit() {\n    const {\n      nodeType, topicName, resourceType, resourceData,\n    } = this.state;\n    let data = {};\n\n    // get the topic name, or don't have the key\n    if (nodeType === 0) {\n      alert('Missing node type');\n      return;\n    } if (nodeType === 1) {\n      if (topicName.length === 0) {\n        alert('Missing topic name');\n        return;\n      }\n      data = { name: topicName };\n    } else { // nodeType === 2 aka Resource\n      if (resourceType === 0) {\n        alert('Missing resource type');\n        return;\n      }\n      data = {\n        resource_type: resourceType,\n        data: resourceData,\n      };\n      if (resourceType > 1) { // check the link\n        if (!resourceData.text || resourceData.text.length === 0) {\n          alert('Missing resource text');\n          return;\n        }\n        const valid = validURL(resourceData.link);\n        if (!valid) {\n          alert('Invalid URL');\n          return;\n        }\n      }\n    }\n\n    data.node_type = nodeType; // everyone has a nodeType\n\n    const { addNode } = this.props;\n    addNode(data);\n\n    this.toggleModal();\n  }\n\n  pickedNode() {\n    const { nodeType } = this.state;\n    if (nodeType === 0) {\n      return (<p>Pick a node type please</p>);\n    }\n    return this.fillInNode();\n  }\n\n  fillInNode() {\n    const { nodeType } = this.state;\n    if (nodeType === 1) {\n      return (\n        <Form.Group>\n          <Form.Label>Topic Name</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Bitcoin\" onChange={(ev) => this.setState({ topicName: ev.target.value })} />\n        </Form.Group>\n      );\n    }\n    return (\n      <Form.Group>\n        <Form.Label>Resource data</Form.Label>\n        <Form.Group>\n          <Form.Check type=\"radio\" name=\"radioResourceType\" label=\"Description\" onClick={() => this.setState({ resourceType: 1, resourceData: {} })} />\n          <Form.Check type=\"radio\" name=\"radioResourceType\" label=\"Article\" onClick={() => this.setState({ resourceType: 2, resourceData: {} })} />\n          <Form.Check type=\"radio\" name=\"radioResourceType\" label=\"Video\" onClick={() => this.setState({ resourceType: 3, resourceData: {} })} />\n          <Form.Check type=\"radio\" name=\"radioResourceType\" label=\"Paper\" onClick={() => this.setState({ resourceType: 4, resourceData: {} })} />\n        </Form.Group>\n        {this.topicOrResource()}\n      </Form.Group>\n    );\n  }\n\n  topicOrResource() {\n    const { resourceType } = this.state;\n    if (resourceType === 0 || resourceType === 1) {\n      return (\n        <div>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Bitcoin is a p2p cash system\"\n            onChange={(ev) => {\n              this.setState({\n                resourceData: {\n                  text: ev.target.value,\n                  link: null,\n                },\n              });\n            }}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide valid resource data\n          </Form.Control.Feedback>\n          <Form.Text>\n            Resource data can be a description or hyperlink\n          </Form.Text>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Bitcoin whitepaper\"\n          onChange={(ev) => {\n            const val = ev.target.value; // to save the virtual event\n            this.setState((prevState) => ({\n              resourceData: {\n                ...prevState.resourceData,\n                text: val,\n              },\n            }));\n          }}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please provide valid resource link name\n        </Form.Control.Feedback>\n        <Form.Text>\n          Resource link name\n        </Form.Text>\n\n        <Form.Control\n          type=\"url\"\n          placeholder=\"https://bitcoin.org/bitcoin.pdf\"\n          onChange={(ev) => {\n            const val = ev.target.value;\n            this.setState((prevState) => ({\n              resourceData: {\n                ...prevState.resourceData,\n                link: val,\n              },\n            }));\n          }}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please provide valid resource link\n        </Form.Control.Feedback>\n        <Form.Text>\n          Resource link URL\n        </Form.Text>\n      </div>\n    );\n  }\n\n\n  render() {\n    const { isOpen } = this.state;\n    return (\n      <div>\n        <Button className=\"btn btn-info btn-lg btn-mod\" onClick={this.toggleModal}>Add node</Button>\n        <Modal className=\"Modal\" show={isOpen} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Add Node</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <Form.Label>Node type</Form.Label>\n            <Form.Group>\n              <Form.Check type=\"radio\" name=\"radioNodeType\" label=\"Topic\" onClick={() => this.setState({ nodeType: 1 })} />\n              <Form.Check type=\"radio\" name=\"radioNodeType\" label=\"Resource\" onClick={() => this.setState({ nodeType: 2 })} />\n            </Form.Group>\n            {this.pickedNode()}\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button style={{ backgroundColor: '#a9a8a8' }} variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\n              Add node\n            </Button>\n          </Modal.Footer>\n\n        </Modal>\n      </div>\n    );\n  }\n}\n\nAddNodeModal.defaultProps = {\n  addNode: () => alert('ERROR: addNode() invalid'),\n};\n\nAddNodeModal.propTypes = {\n  addNode: PropTypes.func,\n};\n\nexport default AddNodeModal;\n","// eslint-disable-line\n/* eslint-disable no-alert */\nimport React, { Component } from 'react';\nimport {\n  Button, Modal, Form, ToggleButtonGroup, ToggleButton,\n} from 'react-bootstrap';\n\nimport { PropTypes } from 'prop-types';\nimport { NTYPE, RTYPE } from './types';\n\nimport './styles/EditNodeModal.css';\n\nclass EditNodeModal extends Component {\n  constructor(props) {\n    super(props);\n    const { addNode } = this.props;\n\n    this.state = {\n      isOpen: false,\n      ...this.setStateFromNode(),\n    };\n\n    this.addNode = addNode;\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setResourceType = this.setResourceType.bind(this);\n  }\n\n  setStateFromNode() {\n    const { node } = this.props;\n    return ({\n      topicName: (node ? node.data('name') : ''),\n      resourceType: (node ? node.data('resource_type') : 0),\n      resourceData: (node ? node.data('data') : {}),\n    });\n  }\n\n  setResourceType(resourceType) {\n    this.setState({ resourceType });\n  }\n\n  toggleModal() {\n    const { isOpen } = this.state;\n    this.setState({ isOpen: !isOpen });\n  }\n\n  handleOpen() {\n    this.setState({ // make it default again\n      isOpen: true,\n      ...this.setStateFromNode(),\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      isOpen: false,\n    });\n    this.toggleModal();\n  }\n\n  handleSubmit() {\n    this.toggleModal();\n    const {\n      node, addNode, setNode, updateEdges, removeNode,\n    } = this.props;\n    const data = { ...node.data() };\n    const { resourceType, resourceData, topicName } = this.state;\n    data.resource_type = resourceType;\n    data.data = resourceData;\n\n    if (topicName) {\n      data.name = topicName;\n    }\n\n    if (JSON.stringify(data) === JSON.stringify(node.data())) {\n      return; // No changes to save\n    }\n\n    // if this is a resource node delete its name\n    if (data.node_type === 2) {\n      delete data.name;\n    }\n\n    delete data.id;\n\n    const newNode = addNode(data);\n    setNode(newNode);\n\n    // take existing edges and put newNode\n    updateEdges(node, newNode);\n    newNode.shift(node.position());\n    newNode.trigger('tap');\n\n    // delete n\n    removeNode(node);\n  }\n\n  topicOrResource() {\n    const { node } = this.props;\n    const {\n      topicName, resourceType,\n    } = this.state;\n    if (node.data('node_type') === NTYPE.TOPIC) {\n      return (\n        <Form.Group>\n          <Form.Label>Topic Name</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Bitcoin\" value={topicName} onChange={(ev) => this.setState({ topicName: ev.target.value })} />\n        </Form.Group>\n      );\n    }\n    return (\n      <Form.Group>\n        <Form.Label>Resource data</Form.Label>\n\n        <ToggleButtonGroup type=\"radio\" name=\"idk\" value={resourceType} onChange={this.setResourceType}>\n          <ToggleButton value={1}>Description</ToggleButton>\n          <ToggleButton value={2}>Article</ToggleButton>\n          <ToggleButton value={3}>Video</ToggleButton>\n          <ToggleButton value={4}>Paper</ToggleButton>\n        </ToggleButtonGroup>\n\n        {this.descOrLink()}\n\n      </Form.Group>\n    );\n  }\n\n  descOrLink() {\n    const {\n      resourceType, resourceData,\n    } = this.state;\n    if (resourceType === 0 || resourceType === RTYPE.DESC) {\n      return (\n        <div>\n          <Form.Control\n            id=\"abc\"\n            name=\"abc\"\n            type=\"text\"\n            placeholder=\"Bitcoin is a p2p cash system\"\n            value={resourceData.text}\n            onChange={(ev) => {\n              const val = ev.target.value; // to save the virtual event\n              this.setState((prevState) => ({\n                resourceData: {\n                  ...prevState.resourceData,\n                  text: val,\n                },\n              }));\n            }}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide valid resource data\n          </Form.Control.Feedback>\n          <Form.Text>\n            Resource data can be a description or hyperlink\n          </Form.Text>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Bitcoin whitepaper\"\n          value={resourceData ? resourceData.text : null}\n          onChange={(ev) => {\n            const val = ev.target.value; // to save the virtual event\n            this.setState((prevState) => ({\n              resourceData: {\n                ...prevState.resourceData,\n                text: val,\n              },\n            }));\n          }}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please provide valid resource link name\n        </Form.Control.Feedback>\n        <Form.Text>\n          Resource link name\n        </Form.Text>\n\n        <Form.Control\n          type=\"url\"\n          placeholder=\"https://bitcoin.org/bitcoin.pdf\"\n          value={resourceData ? resourceData.link : null}\n          onChange={(ev) => {\n            const val = ev.target.value;\n            this.setState((prevState) => ({\n              resourceData: {\n                ...prevState.resourceData,\n                link: val,\n              },\n            }));\n          }}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please provide valid resource link\n        </Form.Control.Feedback>\n        <Form.Text>\n          Resource link URL\n        </Form.Text>\n      </div>\n    );\n  }\n\n\n  render() {\n    const { node } = this.props;\n    const {\n      isOpen,\n    } = this.state;\n    if (!node) return <span />;\n    return (\n      <span>\n        <Button className=\"btn btn-info btn-lg btn-mod\" onClick={this.toggleModal}>Edit node</Button>\n        <Modal className=\"Modal\" show={isOpen} onHide={this.handleClose} onShow={this.handleOpen}>\n          <Modal.Header closeButton>\n            <Modal.Title>Edit Node</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <p>{node.data('name')}</p>\n            {this.topicOrResource()}\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button style={{ backgroundColor: '#a9a8a8' }} variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\n              Edit node\n            </Button>\n          </Modal.Footer>\n\n        </Modal>\n      </span>\n    );\n  }\n}\n\nEditNodeModal.defaultProps = {\n  addNode: () => alert('ERROR: addNode() invalid'),\n  node: null,\n  setNode: () => alert('ERROR: setNode() invalid'),\n  updateEdges: () => alert('ERROR: updateEdgges() invalid'),\n  removeNode: () => alert('ERROR: removeNode() invalid'),\n};\n\nEditNodeModal.propTypes = {\n  addNode: PropTypes.func,\n  node: PropTypes.object, // eslint-disable-line\n  setNode: PropTypes.func,\n  updateEdges: PropTypes.func,\n  removeNode: PropTypes.func,\n};\n\nexport default EditNodeModal;\n","// eslint-disable-line\nimport React, { Component } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport { IOKS } from './constants';\nimport './styles/ListIoksModal.css';\n\nclass ListIoksModal extends Component {\n  /**\n   * iokLink can either be a full URL or a blockstack ID,\n   * in which case it should be prefixed with the current URL. The\n   * prior is to give users the flexibility to host their own IoKs\n   */\n  static makeIokComponent(user, app) {\n    return <a href={app}>{user}</a>;\n  }\n\n  // stolen from: https://stackoverflow.com/questions/7171099/how-to-replace-url-parameter-with-javascript-jquery\n  static replaceUrlParam(url, paramName, paramValue) {\n    let paramV = paramValue;\n    if (paramValue == null) {\n      paramV = '';\n    }\n    const pattern = new RegExp(`\\\\b(${paramName}=).*?(&|#|$)`);\n    if (url.search(pattern) >= 0) {\n      return url.replace(pattern, `$1${paramV}$2`);\n    }\n    const urlNew = url.replace(/[?#]$/, '');\n    return `${urlNew + (urlNew.indexOf('?') > 0 ? '&' : '?') + paramName}=${paramV}`;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n\n  toggleModal() {\n    const { isOpen } = this.state;\n    this.setState({ isOpen: !isOpen });\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    return (\n      <div>\n        <Button className=\"btn btn-info btn-lg btn-mod\" onClick={this.toggleModal}>List IoKs</Button>\n        <Modal className=\"Modal\" show={isOpen} onHide={this.toggleModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>IoK Public Listing</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <ul>\n              { /* eslint-disable-next-line max-len */}\n              {IOKS.map((iok) => <li key={iok.user}>{ListIoksModal.makeIokComponent(iok.user, iok.app)}</li>)}\n            </ul>\n\n          </Modal.Body>\n\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ListIoksModal;\n","// eslint-disable-line\n/* eslint-disable no-console */\n/* eslint-disable no-alert */\nimport React, { Component } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport { PropTypes } from 'prop-types';\nimport AddNodeModal from './AddNodeModal';\nimport EditNodeModal from './EditNodeModal';\nimport ListIoksModal from './ListIoksModal';\nimport Log from './log';\n\nimport './styles/IokText.css';\n\nimport {\n  regroupCy, toggleDrawMode, toggleMeta, addNode, getNodesEdgesJson,\n} from './listen';\nimport { GRAPH_FILENAME } from './constants';\nimport { NTYPE } from './types';\n\nclass IokText extends Component {\n  constructor(props) {\n    super(props);\n\n    const { onSaveClick, onDeleteClick, loadGraphHandler } = this.props;\n\n    this.onSaveClick = onSaveClick;\n    this.onDeleteClick = onDeleteClick;\n    this.loadGraphHandler = loadGraphHandler;\n\n    this.toggleSaveModal = this.toggleSaveModal.bind(this);\n    this.toggleDeleteModal = this.toggleDeleteModal.bind(this);\n    this.onMetaClick = this.onMetaClick.bind(this);\n    this.onRegroupClick = this.onRegroupClick.bind(this);\n    this.onAddClick = this.onAddClick.bind(this);\n    this.addNodeToCy = this.addNodeToCy.bind(this);\n    this.downloadGraph = this.downloadGraph.bind(this);\n    this.onFileUploadHandler = this.onFileUploadHandler.bind(this);\n    this.removeNodeFromCy = this.removeNodeFromCy.bind(this);\n    this.updateEdgesFromCy = this.updateEdgesFromCy.bind(this);\n\n    this.state = {\n      drawEnabled: false,\n      showDeleteModal: false,\n      showSaveModal: false,\n    };\n  }\n\n  static getDerivedStateFromProps(props) {\n    return { // TODO: figure out why this is called twice\n      cy: props.cy,\n    };\n  }\n\n  onMetaClick() {\n    const { cy } = this.state;\n    toggleMeta(cy);\n  }\n\n  onRegroupClick() {\n    const { cy } = this.state;\n    regroupCy(cy);\n  }\n\n  static onDrawClick() {\n    toggleDrawMode();\n  }\n\n  onAddClick() {\n    const rand = String(Math.ceil(Math.random() * 1000000));\n    const data = {\n      node_type: 1,\n      name: 'rand-'.concat(rand),\n    };\n    this.addNodeToCy(data);\n  }\n\n  onFileUploadHandler(event) {\n    const reader = new FileReader();\n    reader.onload = (ev) => {\n      Log.info(ev.target.result);\n      try {\n        const obj = JSON.parse(ev.target.result);\n        this.loadGraphHandler(obj);\n      } catch (err) {\n        Log.error(err);\n        alert('Invalid JSON file');\n      }\n    };\n    reader.readAsText(event.target.files[0]);\n  }\n\n  downloadGraph() {\n    const { cy } = this.state;\n    const exportObj = getNodesEdgesJson(cy);\n    const exportName = GRAPH_FILENAME;\n    const dataStr = `data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(exportObj))}`;\n    const downloadAnchorNode = document.createElement('a');\n    downloadAnchorNode.setAttribute('href', dataStr);\n    downloadAnchorNode.setAttribute('download', exportName);\n    document.body.appendChild(downloadAnchorNode); // required for firefox\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  }\n\n  /**\n   * Adds node to cy with the given data\n   * NOTE: Don't give me an id!\n   * XXX: perhaps move this to utils\n   * @param {*} data\n   */\n  addNodeToCy(data) {\n    const { cy } = this.state;\n    const hash = sha256.create();\n    hash.update(JSON.stringify(data));\n    let dataWithHash = { ...data, id: hash.hex() };\n    if (!('name' in data)) { // XXX: make a note of this... give it a name...\n      dataWithHash = { ...dataWithHash, name: 'res-'.concat(dataWithHash.id.substring(0, 10)) };\n    }\n\n    Log.info('DATA', dataWithHash);\n    return addNode(cy, dataWithHash);\n  }\n\n  toggleDeleteModal() {\n    const { showDeleteModal } = this.state;\n    this.setState({ showDeleteModal: !showDeleteModal });\n  }\n\n  toggleSaveModal() {\n    const { showSaveModal } = this.state;\n    this.setState({ showSaveModal: !showSaveModal });\n  }\n\n  removeNodeFromCy(node) {\n    const { cy } = this.state;\n    cy.remove(node);\n  }\n\n  updateEdgesFromCy(oldNode, newNode) {\n    const { cy } = this.state;\n    oldNode.incomers((el) => el.isNode()).map(\n      (neighbor) => cy.add({\n        group: 'edges',\n        data: { source: neighbor.id(), target: newNode.id() },\n      }),\n    );\n    oldNode.outgoers((el) => el.isNode()).map(\n      (neighbor) => cy.add({\n        group: 'edges',\n        data: { source: newNode.id(), target: neighbor.id() },\n      }),\n    );\n    cy.remove(oldNode.connectedEdges());\n  }\n\n\n  render() {\n    // XXX: makes the linter happy, but hard to read...\n    const {\n      currNode, graphLoaded, guestMode, setCurrNode,\n    } = this.props;\n    const { showDeleteModal, showSaveModal, drawEnabled } = this.state;\n\n    const node = currNode;\n    const data = node && Object.keys(node).length > 0 ? node.data() : {\n      name: 'Overview',\n      data: 'Index of Knowledge (IoK) is a curated collection of resources for blockchain, grouped by topic and topologically ordered by pedagogical dependency.',\n      resource_type: 1,\n      node_type: 2,\n    };\n\n    let subtitle = '';\n    if (data.node_type === NTYPE.RESO) {\n      subtitle = 'NOTE: Resource node. Displaying own contents';\n    }\n\n    let neighbors = [data];\n\n    if (data.node_type === NTYPE.TOPIC) {\n      neighbors = node.incomers((el) => el.isNode())\n        .map((neighbor) => neighbor.data());\n    }\n\n    const depList = [];\n    const descList = [];\n    const linkList = [];\n\n    // XXX: look into this\n    // eslint-disable-next-line no-restricted-syntax\n    for (const neighbor of neighbors) {\n      if (neighbor.node_type === NTYPE.TOPIC) { // topic is dep\n        depList.push(<li key={neighbor.name}>{neighbor.name}</li>);\n      } else if (neighbor.node_type === NTYPE.RESO) { // resource\n        if (neighbor.resource_type === 1) { // desc\n          descList.push(<li key={neighbor.data}>{neighbor.data.text}</li>);\n        } else { // link type\n          // eslint-disable-next-line max-len\n          linkList.push(<li key={neighbor.data}><a href={neighbor.data.link}>{neighbor.data.text}</a></li>);\n        }\n      }\n    }\n    // XXX: HACK!! if no node is selected, we use a linkList alongside a descList\n    if (!node) {\n      linkList.push(<li key=\"dummy\"><a href=\".\">Resource links appear here!</a></li>);\n    }\n\n    return (\n\n      <div>\n\n        <Modal className=\"Modal\" show={showDeleteModal} onHide={this.toggleDeleteModal}>\n          <Modal.Header>\n            <Modal.Title>Delete your IoK?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            This will delete all your IoK data from your Blockstack data locker.\n          </Modal.Body>\n          <Modal.Footer>\n            <Button className=\"btn btn-info btn-lg btn-delete\" onClick={() => { this.onDeleteClick(); this.toggleDeleteModal(); }}>\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal className=\"Modal\" show={showSaveModal} onHide={this.toggleSaveModal}>\n          <Modal.Header>\n            <Modal.Title>Save your IoK?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            This will save your IoK data to your Blockstack data locker,\n            potentially overwriting previous versions.\n          </Modal.Body>\n          <Modal.Footer>\n            <Button className=\"btn btn-info btn-lg btn-save\" onClick={() => { this.onSaveClick(); this.toggleSaveModal(); }}>\n              Save\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <div id=\"cytext\" className=\"iok-text\">\n          <div>\n            <h2 className=\"breaking\" id=\"nodetitle\">{data.name}</h2>\n\n            {/* used mainly to display info text to user */}\n            <p className=\"breaking\" id=\"nodeid\">{data.id}</p>\n            <p id=\"nodesubtitle\">{subtitle}</p>\n\n            <hr className=\"hr-sep\" />\n\n            {descList.length !== 0 && (\n              <div>\n                <h5>Description(s)</h5>\n                <ul id=\"nodedescs\">\n                  {descList}\n                </ul>\n              </div>\n            )}\n\n            {linkList.length !== 0 && (\n              <div>\n                <h5>Links</h5>\n                <ul id=\"nodelinks\">\n                  {linkList}\n                </ul>\n              </div>\n            )}\n\n            {depList.length !== 0 && (\n              <div>\n                <h5>Dependencies</h5>\n                <ul id=\"nodedeps\">\n                  {depList}\n                </ul>\n              </div>\n            )}\n\n            <hr className=\"hr-sep\" />\n\n            <div>\n              <div className=\"edit-div\">\n                <h5>Edit</h5>\n                <EditNodeModal\n                  node={node}\n                  addNode={this.addNodeToCy}\n                  removeNode={this.removeNodeFromCy}\n                  setNode={setCurrNode}\n                  updateEdges={this.updateEdgesFromCy}\n                />\n                <AddNodeModal addNode={this.addNodeToCy} />\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-info btn-lg btn-util\"\n                  onClick={\n                    () => {\n                      IokText.onDrawClick();\n                      this.setState({ drawEnabled: !drawEnabled });\n                    }\n                  }\n                >\n                  {`Turn ${drawEnabled ? 'OFF' : 'ON'} edge drawing`}\n                </button>\n\n                {!graphLoaded || guestMode ? <div /> : (\n                  <div>\n                    <button type=\"button\" className=\"btn btn-info btn-lg btn-save\" onClick={this.toggleSaveModal}>Save</button>\n                    <button type=\"button\" className=\"btn btn-info btn-lg btn-delete\" onClick={this.toggleDeleteModal}>Delete</button>\n                  </div>\n                )}\n\n              </div>\n\n              <div className=\"misc-div\">\n                <h5>Misc</h5>\n                <ListIoksModal />\n                {graphLoaded ? <button type=\"button\" id=\"downloadButton\" className=\"btn btn-info btn-lg btn-util\" onClick={this.downloadGraph}>Download</button> : <div />}\n                <input className=\"btn btn-info btn-lg btn-upload\" type=\"file\" name=\"file\" onChange={this.onFileUploadHandler} />\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nIokText.defaultProps = {\n  onSaveClick: () => alert('ERROR: onSaveClick() invalid'),\n  onDeleteClick: () => alert('ERROR: onDeleteClick() invalid'),\n  loadGraphHandler: () => alert('ERROR: loadGraphHandler() invalid'),\n  cy: {}, // XXX: UGLY!!!!\n  currNode: null,\n  graphLoaded: false,\n  guestMode: false,\n  setCurrNode: () => alert('ERROR: setCurrNode() invalid'),\n};\n\nIokText.propTypes = {\n  onSaveClick: PropTypes.func,\n  onDeleteClick: PropTypes.func,\n  loadGraphHandler: PropTypes.func,\n  // eslint-disable-next-line react/forbid-prop-types\n  cy: PropTypes.object,\n  // eslint-disable-next-line react/forbid-prop-types\n  currNode: PropTypes.object, // XXX: a good excuse to use TypeScript...\n  graphLoaded: PropTypes.bool,\n  guestMode: PropTypes.bool,\n  setCurrNode: PropTypes.func,\n};\n\nexport default IokText;\n","// eslint-disable-line\nimport Log from '../log';\n\nconst TAG = 'storage.localstorage';\n\n/**\n * NOTE: this only allows us to cache one graph at a time now.\n * While this might be easier to understand to the end user,\n * we could also allow caching for each (storage, options), but that might get confusing\n */\nconst KEY = 'localgraph';\nconst STORAGE_KEY = 'storagetype';\nconst OPTIONS_KEY = 'storageoptions';\n\n/**\n * Loads graph, storage, and options (metadata) from cache in localstorage\n * only if cache exists and there are nodes and edges to populate\n * @param {*} onError\n */\nexport const loadCache = (onError) => {\n  Log.info(TAG, 'Loading from localstorage');\n  const storedGraph = localStorage.getItem(KEY);\n  const storage = localStorage.getItem(STORAGE_KEY);\n  const storedOptions = localStorage.getItem(OPTIONS_KEY);\n  try {\n    if (storedGraph && storage && storedOptions) {\n      const graph = JSON.parse(storedGraph);\n      if (graph.elements !== null\n        && graph.elements.nodes.length > 0 && graph.elements.edges.length > 0) {\n        const options = JSON.parse(storedOptions);\n        Log.info(TAG, 'Got from graph from localstorage');\n        Log.info(TAG, graph);\n        Log.info(TAG, storage);\n        Log.info(TAG, options);\n        return { graph, storage, options };\n      }\n      onError('cached graph is empty, skipping');\n    }\n    onError('cache is empty');\n  } catch (err) {\n    onError(err);\n  }\n  return {};\n};\n\n/**\n * Saves graph, storage, options to cache in localstorage\n * @param {*} graph\n * @param {*} storage\n * @param {*} options\n */\nexport const saveCache = (graph, storage, options) => {\n  // Log.info(TAG, 'Saving graph to localstorage');\n  // Log.info(TAG, graph);\n  try {\n    const graphStr = JSON.stringify(graph);\n    localStorage.setItem(KEY, graphStr);\n    localStorage.setItem(STORAGE_KEY, storage);\n    const optionsStr = JSON.stringify(options);\n    localStorage.setItem(OPTIONS_KEY, optionsStr);\n    Log.info(TAG, 'localstorage save successful');\n  } catch (err) {\n    // pass\n  }\n};\n\nexport const wipeCache = () => {\n  localStorage.removeItem(KEY);\n  localStorage.removeItem(STORAGE_KEY);\n  localStorage.removeItem(OPTIONS_KEY);\n};\n","// eslint-disable-line\n/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport { UserSession } from 'blockstack';\nimport Split from 'react-split';\nimport { Button, Modal } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nimport Cytoscape from 'cytoscape';\nimport dagre from 'cytoscape-dagre';\nimport cola from 'cytoscape-cola';\nimport edgehandles from 'cytoscape-edgehandles';\n\nimport NavBar from './NavBar';\nimport IokText from './IokText';\nimport {\n  appConfig,\n  GRAPH_FILENAME,\n  DEFL_GRAPH_ELEMENTS,\n  DEFL_GRAPH_STYLE,\n  DEFL_STORAGE_OPTIONS,\n  DEFL_STORAGE,\n} from './constants';\nimport Log from './log';\nimport { loadBlockstackGraph, saveBlockstackGraph } from './storage/blockstack';\nimport { loadIPFSGraph, saveIPFSGraph } from './storage/ipfs';\nimport { loadCache, saveCache, wipeCache } from './storage/cache';\nimport './styles/SignedIn.css';\n\nimport {\n  regroupCy,\n  registerNodeTap,\n  registerEdgeHandles,\n  toggleMeta,\n  getExportableJson,\n} from './listen';\n\nimport { STORAGE_TYPES } from './types';\n\nCytoscape.use(dagre);\nCytoscape.use(cola);\nCytoscape.use(edgehandles);\n\nclass SignedIn extends Component {\n  static overrideGutterStyle() {\n    // override somehow\n    return {\n      width: '8px',\n      height: '100vh',\n      'background-color': '#18191c',\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    const { storage, options } = this.props;\n    Log.info('storage/options');\n    Log.info(storage);\n    Log.info(options);\n\n    this.userSession = new UserSession({ appConfig });\n\n    this.state = {\n      storage,\n      options,\n      graphLoaded: false,\n      unableToLoadGraph: false,\n      selectedNode: null,\n      timerID: 0,\n    };\n\n    this.loadGraph = this.loadGraph.bind(this);\n    this.saveGraph = this.saveGraph.bind(this);\n    this.deleteGraph = this.deleteGraph.bind(this);\n    this.signOut = this.signOut.bind(this);\n    this.changeLoadUser = this.changeLoadUser.bind(this);\n    this.loadDefaultGraph = this.loadDefaultGraph.bind(this);\n    this.loadEmptyGraph = this.loadEmptyGraph.bind(this);\n    this.loadGraphFromFile = this.loadGraphFromFile.bind(this);\n    this.onSuccessLoadGraph = this.onSuccessLoadGraph.bind(this);\n    this.onErrorLoadGraph = this.onErrorLoadGraph.bind(this);\n    this.periodicallySaveCache = this.periodicallySaveCache.bind(this);\n  }\n\n  // since we're creating the cytoscape div in this component,\n  // only create the cy instance (and load data into it) after\n  // we've rendered\n  componentDidMount() {\n    const cy = Cytoscape({\n      container: document.getElementById('cy'),\n      layout: {\n        name: 'dagre',\n        animate: true,\n      },\n      style: DEFL_GRAPH_STYLE,\n    });\n    this.setState({ cy }, () => {\n      registerNodeTap(cy, (node) => {\n        this.setState({ selectedNode: node });\n      });\n      registerEdgeHandles(cy);\n      this.loadGraph();\n\n      // autosave every second\n      // to prevent interleaving interval calls, keep the timerID in state\n      // and clear it before setting a new interval\n      const { timerID } = this.state;\n      clearInterval(timerID);\n      const newTimerID = setInterval(this.periodicallySaveCache, 1000);\n      this.setState({ timerID: newTimerID });\n    });\n  }\n\n  onSuccessLoadGraph(jsonGraph) {\n    const { cy, storage, options } = this.state;\n    Log.info(jsonGraph);\n    Log.info(cy);\n    cy.json(jsonGraph); // edit local cy in place\n    Log.info('Cy currently size', cy.elements().length);\n    regroupCy(cy, false);\n    regroupCy(cy);\n    this.setState({ graphLoaded: true });\n\n    // save it to cache too\n    saveCache(jsonGraph, storage, options);\n  }\n\n  onErrorLoadGraph(e) {\n    Log.error('Failed to load graph', e);\n    const { options } = this.state;\n    this.setState({\n      unableToLoadGraph: true,\n      options: { ...options, loaduser: 'default' },\n    });\n  }\n\n  periodicallySaveCache() {\n    const { cy, storage, options } = this.state;\n    const graph = getExportableJson(cy);\n    saveCache(graph, storage, options);\n  }\n\n  // this is important since we want to re-render each time the user changes\n  changeLoadUser(newUser) {\n    const { options } = this.state;\n    this.setState({ options: { ...options, loaduser: newUser } });\n  }\n\n  /**\n   * Load cy instance from various storage providers\n   */\n  loadGraph() {\n    const { storage, options } = this.state;\n\n    // only load from cache if it's valid and it's what we're requesting\n    const cached = loadCache((err) => { Log.error(err, 'cache invalid'); });\n    if (Object.keys(cached).length > 0) {\n      // cache is exactly what we're requesting if it's the same storage and options\n      // e.g. loading from a cached IoK copied from someone's blockstack storage\n      if ((cached.storage === storage\n        && JSON.stringify(cached.options) === JSON.stringify(options))) {\n        Log.info('Load request cache');\n        this.onSuccessLoadGraph(cached.graph);\n        return;\n      }\n      // if we're loading the default graph, check cache first\n      if (storage === DEFL_STORAGE\n        && JSON.stringify(options) === JSON.stringify(DEFL_STORAGE_OPTIONS)) {\n        Log.info('Load DEFL request cache');\n        this.onSuccessLoadGraph(cached.graph);\n        return;\n      }\n    }\n\n    switch (storage) {\n      case STORAGE_TYPES.IPFS:\n        loadIPFSGraph(options.hash, this.onSuccessLoadGraph, this.onErrorLoadGraph);\n        break;\n      case STORAGE_TYPES.BLOCKSTACK:\n        loadBlockstackGraph(\n          this.userSession,\n          options.loaduser,\n          this.onSuccessLoadGraph,\n          this.onErrorLoadGraph,\n        );\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Support loading graph from user-uploaded JSON file\n   */\n  loadGraphFromFile(content) {\n    const { cy, options } = this.state;\n    try {\n      cy.json({\n        elements: content,\n        style: DEFL_GRAPH_STYLE,\n      });\n      regroupCy(cy, false);\n      regroupCy(cy);\n      this.setState({ graphLoaded: true });\n    } catch (err) {\n      // eslint-disable-next-line no-alert\n      alert('Invalid graph format');\n      this.setState({ unableToLoadGraph: true, options: { ...options, loaduser: 'default' } });\n    }\n  }\n\n  /**\n   * Save local cy instance to Gaia as json\n   */\n  saveGraph() {\n    const { cy, storage, options } = this.state;\n    const graph = getExportableJson(cy);\n\n    saveCache(graph, storage, options);\n\n    switch (storage) {\n      case STORAGE_TYPES.IPFS:\n        // might result in invalid state if cache is not updated after onHashChange\n        saveIPFSGraph(graph, (hash) => { this.setState({ options: { hash } }); alert(hash); });\n        break;\n      case STORAGE_TYPES.BLOCKSTACK:\n        saveBlockstackGraph(graph, this.userSession);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * a cheap delete func based off save empty\n   */\n  deleteGraph() {\n    const { cy, storage, options } = this.state;\n    switch (storage) {\n      case STORAGE_TYPES.IPFS:\n        Log.error('IPFS delete not implemented');\n        break;\n      case STORAGE_TYPES.BLOCKSTACK:\n        this.userSession.deleteFile(GRAPH_FILENAME).finally(() => {\n          cy.json({\n            elements: [],\n            style: DEFL_GRAPH_STYLE,\n          });\n          this.setState({\n            graphLoaded: false,\n            unableToLoadGraph: true,\n            options: { ...options, loaduser: 'default' },\n          });\n          this.loadGraph();\n        });\n        break;\n      default:\n        break;\n    }\n\n    wipeCache();\n  }\n\n  signOut(e) {\n    const { storage } = this.state;\n    if (storage === STORAGE_TYPES.BLOCKSTACK) {\n      e.preventDefault();\n      this.userSession.signUserOut();\n      window.location = '/?storage='.concat(STORAGE_TYPES.BLOCKSTACK);\n    }\n  }\n\n  loadEmptyGraph() {\n    const { cy } = this.state;\n    this.setState({ graphLoaded: true, unableToLoadGraph: false });\n    regroupCy(cy);\n  }\n\n  loadDefaultGraph() {\n    const { cy } = this.state;\n    cy.json({\n      elements: DEFL_GRAPH_ELEMENTS,\n      style: DEFL_GRAPH_STYLE,\n    });\n    this.setState({ graphLoaded: true, unableToLoadGraph: false });\n    regroupCy(cy, false);\n    regroupCy(cy);\n  }\n\n  NavOrNot() {\n    const { storage, options } = this.state;\n    if (storage === STORAGE_TYPES.IPFS) {\n      return (null);\n    }\n\n    return (\n      <NavBar\n\n        username={options.username}\n        loadName={options.loaduser}\n        changeLoadUser={this.changeLoadUser}\n        signOut={this.signOut}\n      />\n    );\n  }\n\n  render() {\n    const {\n      cy,\n      storage,\n      options,\n      graphLoaded,\n      unableToLoadGraph,\n      selectedNode,\n    } = this.state;\n\n    const { guest } = options;\n\n    return (\n      <div className=\"SignedIn\">\n        <Modal className=\"Modal\" show={!graphLoaded && !unableToLoadGraph}>\n          <Modal.Header>\n            <Modal.Title>\n              {'Loading graph from '.concat(storage)}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Footer />\n        </Modal>\n\n        <Modal\n          className=\"Modal\"\n          show={unableToLoadGraph}\n          onHide={this.loadEmptyGraph}\n        >\n          <Modal.Header>\n            <Modal.Title>Unable to fetch graph</Modal.Title>\n          </Modal.Header>\n          <Modal.Footer>\n            <Button\n              style={{ backgroundColor: '#a9a8a8' }}\n              variant=\"secondary\"\n              type=\"submit\"\n              onClick={this.loadEmptyGraph}\n            >\n              Load empty\n            </Button>\n            <Button\n              style={{ backgroundColor: '#a9a8a8' }}\n              variant=\"primary\"\n              type=\"submit\"\n              onClick={this.loadDefaultGraph}\n            >\n              Load default\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <NavBar\n          storage={storage}\n          options={options}\n          changeLoadUser={this.changeLoadUser}\n          signOut={this.signOut}\n        />\n\n        <Split\n          className=\"split-parent\"\n          sizes={[60, 40]}\n          gutterStyle={SignedIn.overrideGutterStyle}\n          gutterAlign=\"center\"\n          direction=\"horizontal\"\n          cursor=\"col-resize\"\n        >\n          {/* first split */}\n          <div className=\"split split-horizontal\">\n            <div className=\"split content\" id=\"cy\">\n              <p className=\"hidden-msg\">\n                p.s. refresh if the graph does not load\n              </p>\n              <div className=\"cy-overlay\">\n                <Button\n                  className=\"btn btn-info btn-lg btn-util\"\n                  onClick={() => toggleMeta(cy)}\n                >\n                  Toggle meta-graph\n                </Button>\n                <Button\n                  className=\"btn btn-info btn-lg btn-util\"\n                  onClick={() => regroupCy(cy, false)}\n                >\n                  Regroup dagre\n                </Button>\n                <Button\n                  className=\"btn btn-info btn-lg btn-util\"\n                  onClick={() => regroupCy(cy)}\n                >\n                  Regroup cola\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          {/* second split */}\n          <div className=\"split split-horizontal\">\n            <IokText\n              currNode={selectedNode}\n              className=\"split content\"\n              cy={cy}\n              onSaveClick={this.saveGraph}\n              onDeleteClick={this.deleteGraph}\n              loadGraphHandler={this.loadGraphFromFile}\n              guestMode={guest}\n              graphLoaded={graphLoaded}\n              setCurrNode={(node) => this.setState({ selectedNode: node })}\n            />\n          </div>\n        </Split>\n      </div>\n    );\n  }\n}\n\nSignedIn.defaultProps = {\n  storage: DEFL_STORAGE,\n  options: DEFL_STORAGE_OPTIONS,\n};\n\nSignedIn.propTypes = {\n  storage: PropTypes.string,\n  // eslint-disable-next-line react/forbid-prop-types\n  options: PropTypes.object,\n};\n\nexport default SignedIn;\n","// eslint-disable-line\nimport { getFullGraph, putGraph } from 'ipfs-cytoscape';\nimport Log from '../log';\n\nconst TAG = 'storage.ipfs';\n\nexport const loadIPFSGraph = (hash, onSuccess, onError) => {\n  Log.info(TAG, 'Loading from IPFS', hash);\n  getFullGraph(hash)\n    .then((data) => onSuccess(data))\n    .catch((err) => onError(err));\n};\n\nexport const saveIPFSGraph = (graph, onHashChange) => {\n  putGraph(graph)\n    .then((data) => { Log.info(TAG, data); onHashChange(data); })\n    .catch((err) => Log.error(err));\n};\n","// eslint-disable-line\nimport Log from '../log';\nimport { GRAPH_FILENAME } from '../constants';\n\nconst TAG = 'storage.blockstack';\n\nexport const loadBlockstackGraph = (userSession, loadUsername, onSuccess, onError) => {\n  Log.info('GOT FUNCTIONS', onSuccess, onError);\n  Log.info(TAG, 'Loading', loadUsername, \"'s data\");\n  const options = { decrypt: false, username: loadUsername };\n  userSession.getFile(GRAPH_FILENAME, options)\n    .then((content) => {\n      if (content && content.length > 0) {\n        const graph = JSON.parse(content);\n        onSuccess(graph);\n      } else {\n        onError();\n      } // deal with fail and err as same\n    }).catch((err) => {\n      onError(err);\n    });\n};\n\nexport const saveBlockstackGraph = (graph, userSession) => {\n  Log.info(TAG, 'SAVING...', graph);\n  userSession\n    .putFile(GRAPH_FILENAME, JSON.stringify(graph), { encrypt: false })\n    .finally(() => {\n      Log.info('Saved');\n    });\n};\n","// eslint-disable-line\n/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport './styles/App.css';\nimport { UserSession } from 'blockstack';\n\nimport Landing from './Landing';\nimport SignedIn from './SignedIn';\nimport Log from './log';\nimport { STORAGE_TYPES } from './types';\nimport { parseParams, redirectGuest, redirectStorage } from './urlUtils';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    const { storage, options } = parseParams();\n    this.state = { storage, options };\n    this.userSession = new UserSession();\n\n    Log.info(storage, options);\n  }\n\n  componentDidMount() {\n    const { storage, options } = this.state;\n    const session = this.userSession;\n\n    // If we're using blockstack authed, get the username\n    if (storage === STORAGE_TYPES.BLOCKSTACK\n      && !('guest' in options)\n      && !options.guest) {\n      if (!session.isUserSignedIn() && session.isSignInPending()) {\n        session.handlePendingSignIn().then((userData) => {\n          if (!userData.username) {\n            throw new Error('This app requires a username.');\n          }\n          this.setState({ options: { ...options, username: userData.username } });\n          redirectStorage(STORAGE_TYPES.BLOCKSTACK, { loaduser: userData.username });\n        });\n      }\n    }\n  }\n\n  render() {\n    const { storage, options } = this.state;\n    Log.trace('Re-render App.jsx:', storage, options);\n    return (\n      <div className=\"site-wrapper\">\n        {storage === STORAGE_TYPES.IPFS || options.guest || this.userSession.isUserSignedIn() ? (\n          <SignedIn storage={storage} options={options} />\n        ) : (\n          <Landing guestModeHandler={redirectGuest} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\n// Require Sass file so webpack can build it\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/style.css';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n","// Initiate ipfs and CID instance\nconst IpfsClient = require('ipfs-http-client');\n\n// Connecting ipfs instance to infura node\nconst ipfs = new IpfsClient({\n  host: 'ipfs.infura.io', port: '5001', protocol: 'https', apiPath: '/api/v0',\n});\n\nasync function putGraph(graph) {\n  const hasKeys = 'elements' in graph && 'nodes' in graph.elements && 'edges' in graph.elements;\n  if (!hasKeys) {\n    throw Error('Invalid graph, expected elements: {nodes, edges}');\n  }\n  const options = { format: 'dag-cbor', hashAlg: 'sha2-256', pin: 'true' };\n  const putNodeProms = [];\n  // putEdgeProms = []\n  const putAndProm = (el, lst) => {\n    const prom = ipfs.dag.put(el, options);\n    lst.push(prom);\n  };\n  graph.elements.nodes.forEach((el) => putAndProm(el, putNodeProms));\n  // graph.elements.edges.forEach((el) => putAndProm(el, putEdgeProms))\n  const nodes = await Promise.all(putNodeProms);\n  // edges = await Promise.all(putEdgeProms)\n  const { edges } = graph.elements; // XXX: edges are lightweight and don't need lazy\n  const ipfsGraph = { elements: { nodes, edges } };\n  const cid = await ipfs.dag.put(ipfsGraph, options);\n  return cid.toBaseEncodedString();\n}\n\nasync function getGraph(cid, path = '') {\n  // get cid or subgraph root cid\n  // so we don't have to load in the entire IoK at once, only top level nodes and edges CIDs\n  const graph = await ipfs.dag.get(cid + path);\n  return graph.value;\n}\n\nasync function getFullGraph(cid) {\n  const cgraph = await getGraph(cid);\n  const hasKeys = 'elements' in cgraph && 'nodes' in cgraph.elements && 'edges' in cgraph.elements;\n  if (!hasKeys) {\n    throw Error('Invalid CID for graph, expected elements: {nodes, edges}');\n  }\n  const nodeCIDs = cgraph.elements.nodes;\n  // edgeCIDs = cgraph.elements.edges\n  const getNodeProms = [];\n  // getEdgeProms = []\n  const getAndProm = (el, lst) => {\n    const prom = ipfs.dag.get(el);\n    lst.push(prom);\n  };\n  nodeCIDs.forEach((el) => getAndProm(el, getNodeProms));\n  // edgeCIDs.forEach((el) => getAndProm(el, getEdgeProms))\n  const vnodes = await Promise.all(getNodeProms);\n  // vedges = await Promise.all(getEdgeProms)\n  const ipfsGraph = { elements: { nodes: [], edges: [] } };\n  vnodes.forEach((el) => ipfsGraph.elements.nodes.push(el.value));\n  // vedges.forEach(el => ipfsGraph.elements.edges.push(el.value))\n  ipfsGraph.elements.edges.push(...cgraph.elements.edges);\n  return ipfsGraph;\n}\n\nmodule.exports.putGraph = putGraph;\nmodule.exports.getGraph = getGraph;\nmodule.exports.getFullGraph = getFullGraph;\n"],"sourceRoot":""}